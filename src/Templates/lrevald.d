/*---------------------------------------------------------------------------*
 *  LREVALD.d - LIBERO dialog data definitions for lreval.c.                 *
 *  Generated by LIBERO 2.20 on 26 Dec, 1996, 22:52.                         *
 *  Schema file used: lrschema.c.                                            *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
enum {
    terminate_event = -1,
    animate_event = 0,
    caps_event = 1,
    check_event = 2,
    cobol_event = 3,
    defaults_event = 4,
    error_event = 5,
    event_event = 6,
    exception_event = 7,
    exist_event = 8,
    finished_event = 9,
    headline_event = 10,
    module_event = 11,
    normal_event = 12,
    not_event = 13,
    ok_event = 14,
    other_event = 15,
    plain_event = 16,
    relator_event = 17,
    state_event = 18,
    string_event = 19,
    test_event = 20,
    title_event = 21
};

enum {
    _LR_defaults_state = 10,
    _LR_STATE_after_init = 0,
    _LR_STATE_expect_action = 1,
    _LR_STATE_have_action = 2,
    _LR_STATE_left_expr_first = 3,
    _LR_STATE_left_expr_next = 4,
    _LR_STATE_right_expr_first = 5,
    _LR_STATE_right_expr_next = 6,
    _LR_STATE_left_string_next = 7,
    _LR_STATE_right_string_first = 8,
    _LR_STATE_right_string_next = 9,
    _LR_STATE_defaults = 10
};


/*- Variables used by dialog interpreter ------------------------------------*/

typedef int event_t;                    /*  Type for dialog entity           */
typedef void (fsmfunct) (void);         /*  Address of FSM function          */

static event_t
    _LR_event,                          /*  Event for state transition       */
    _LR_state,                          /*  Current dialog state             */
    _LR_savest,                         /*  Saved dialog state               */
    _LR_index,                          /*  Index into vector table          */
    the_next_event,                     /*  Next event from module           */
    the_exception_event;                /*  Exception event from module      */

static dbyte
   *_LR_vecptr;                         /*  Pointer into vector table        */

static Bool
    exception_raised;                   /*  TRUE if exception raised         */

/*- Function prototypes -----------------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

local  raise_exception                  (event_t event);
MODULE initialise_the_program           (void);
MODULE get_external_event               (void);
MODULE classify_token_as_action         (void);
MODULE concat_token_to_left_expr        (void);
MODULE concat_token_to_right_expr       (void);
MODULE evaluate_animation_enabled       (void);
MODULE evaluate_check_enabled           (void);
MODULE evaluate_defaults_defined        (void);
MODULE evaluate_event_exists            (void);
MODULE evaluate_file_exists             (void);
MODULE evaluate_module_exists           (void);
MODULE evaluate_numeric_comparison      (void);
MODULE evaluate_state_exists            (void);
MODULE evaluate_string_comparison       (void);
MODULE evaluate_style_is_caps           (void);
MODULE evaluate_style_is_cobol          (void);
MODULE evaluate_style_is_headline       (void);
MODULE evaluate_style_is_normal         (void);
MODULE evaluate_style_is_plain          (void);
MODULE evaluate_style_is_title          (void);
MODULE get_next_token                   (void);
MODULE init_left_and_right_expr         (void);
MODULE invert_condition_result          (void);
MODULE save_left_expr_position          (void);
MODULE save_right_expr_position         (void);
MODULE signal_action_expected           (void);
MODULE signal_expr_or_string_expected   (void);
MODULE signal_expression_expected       (void);
MODULE signal_relator_expected          (void);
MODULE signal_relator_ignored           (void);
MODULE signal_string_expected           (void);
MODULE signal_token_missing             (void);
MODULE terminate_the_program            (void);

/*- Static areas ------------------------------------------------------------*/

static dbyte _LR_nextst [][22] =
{
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,1,0,7,0,0 },
    { 2,2,2,2,2,0,2,0,2,0,2,2,2,1,0,4,2,0,2,0,3,2 },
    { 0,0,0,0,0,0,0,0,0,3,0,0,4,0,0,0,0,3,0,7,0,0 },
    { 0,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,0,5,0,4,0,0 },
    { 0,0,0,0,0,0,0,0,0,5,0,0,6,0,0,0,0,5,0,5,0,0 },
    { 0,0,0,0,0,0,0,0,0,6,0,0,6,0,0,0,0,6,0,6,0,0 },
    { 0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,8,0,7,0,0 },
    { 0,0,0,0,0,0,0,0,0,8,0,0,8,0,0,0,0,8,0,9,0,0 },
    { 0,0,0,0,0,0,0,0,0,9,0,0,9,0,0,0,0,9,0,9,0,0 },
    { 0,0,0,0,0,0,0,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0 }
};

static dbyte _LR_action [][22] =
{
    { 0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,5,0,0,3,0,0,0,0,5,0,4,0,0 },
    { 7,8,10,9,11,0,18,0,12,0,13,19,15,6,0,4,14,0,17,0,20,16 },
    { 0,0,0,0,0,0,0,0,0,22,0,0,21,0,0,0,0,22,0,21,0,0 },
    { 0,0,0,0,0,0,0,0,0,24,0,0,23,0,0,0,0,1,0,24,0,0 },
    { 0,0,0,0,0,0,0,0,0,26,0,0,25,0,0,0,0,27,0,26,0,0 },
    { 0,0,0,0,0,0,0,0,0,29,0,0,28,0,0,0,0,27,0,26,0,0 },
    { 0,0,0,0,0,0,0,0,0,24,0,0,30,0,0,0,0,1,0,23,0,0 },
    { 0,0,0,0,0,0,0,0,0,30,0,0,30,0,0,0,0,27,0,25,0,0 },
    { 0,0,0,0,0,0,0,0,0,31,0,0,30,0,0,0,0,27,0,28,0,0 },
    { 0,0,0,0,0,0,0,2,0,32,0,0,0,0,0,0,0,0,0,0,0,0 }
};

static dbyte _LR_vector [][4+1] =
{
    {0},
    {18,_LR_STOP},
    {30,_LR_STOP},
    {0,_LR_STOP},
    {19,21,1,18,_LR_STOP},
    {23,30,_LR_STOP},
    {20,18,_LR_STOP},
    {3,30,_LR_STOP},
    {12,30,_LR_STOP},
    {13,30,_LR_STOP},
    {4,30,_LR_STOP},
    {5,30,_LR_STOP},
    {18,7,30,_LR_STOP},
    {14,30,_LR_STOP},
    {16,30,_LR_STOP},
    {15,30,_LR_STOP},
    {17,30,_LR_STOP},
    {18,10,30,_LR_STOP},
    {18,6,30,_LR_STOP},
    {18,8,30,_LR_STOP},
    {19,18,_LR_STOP},
    {21,1,18,_LR_STOP},
    {24,30,_LR_STOP},
    {1,18,_LR_STOP},
    {26,30,_LR_STOP},
    {22,2,18,_LR_STOP},
    {25,30,_LR_STOP},
    {27,30,_LR_STOP},
    {2,18,_LR_STOP},
    {9,30,_LR_STOP},
    {28,30,_LR_STOP},
    {11,30,_LR_STOP},
    {29,30,_LR_STOP}
};

static fsmfunct *_LR_module [] =
{
    classify_token_as_action,
    concat_token_to_left_expr,
    concat_token_to_right_expr,
    evaluate_animation_enabled,
    evaluate_check_enabled,
    evaluate_defaults_defined,
    evaluate_event_exists,
    evaluate_file_exists,
    evaluate_module_exists,
    evaluate_numeric_comparison,
    evaluate_state_exists,
    evaluate_string_comparison,
    evaluate_style_is_caps,
    evaluate_style_is_cobol,
    evaluate_style_is_headline,
    evaluate_style_is_normal,
    evaluate_style_is_plain,
    evaluate_style_is_title,
    get_next_token,
    init_left_and_right_expr,
    invert_condition_result,
    save_left_expr_position,
    save_right_expr_position,
    signal_action_expected,
    signal_expr_or_string_expected,
    signal_expression_expected,
    signal_relator_expected,
    signal_relator_ignored,
    signal_string_expected,
    signal_token_missing,
    terminate_the_program
};

