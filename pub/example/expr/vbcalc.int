'----------------------------------------------------------------------------
'   Dialog data and code block - do not modify this code by hand
'   Generated by LIBERO 2.10 on  7 Dec, 1995, 15:00.
'   Schema used: lrschema.vb
'--------------------------------------------------------------lrschema.vb---

Option Explicit

'-- Symbolic constants and event numbers ------------------------------------

Const LR_NULL_EVENT = -2
Const terminate_event = -1
Const LR_defaults_state = 4
Const LR_STATE_after_init = 0
Const LR_STATE_expecting_initial = 1
Const LR_STATE_expecting_operand = 2
Const LR_STATE_expecting_operator = 3
Const LR_STATE_defaults = 4

'-- MsgBox parameters -------------------------------------------------------

Const MB_OK = 0                         ' OK button only
Const MB_OKCANCEL = 1                   ' OK and Cancel buttons
Const MB_ABORTRETRYIGNORE = 2           ' Abort, Retry, and Ignore buttons
Const MB_YESNOCANCEL = 3                ' Yes, No, and Cancel buttons
Const MB_YESNO = 4                      ' Yes and No buttons
Const MB_RETRYCANCEL = 5                ' Retry and Cancel buttons

Const MB_ICONSTOP = 16                  ' Critical message
Const MB_ICONQUESTION = 32              ' Warning query
Const MB_ICONEXCLAMATION = 48           ' Warning message
Const MB_ICONINFORMATION = 64           ' Information message

Const MB_APPLMODAL = 0                  ' Application Modal Message Box
Const MB_DEFBUTTON1 = 0                 ' First button is default
Const MB_DEFBUTTON2 = 256               ' Second button is default
Const MB_DEFBUTTON3 = 512               ' Third button is default
Const MB_SYSTEMMODAL = 4096             ' System Modal

'-- Variables used by dialog interpreter ------------------------------------

Dim LR_nextev   As Integer              ' Next event from module
Dim LR_excpev   As Integer              ' Exception event from module
Dim LR_raised   As Integer              ' TRUE if exception raised
Dim LR_feedback As Integer              ' -1 if fatal error hit us

Dim LR_event    As Integer              ' Event for state transition
Dim LR_state    As Integer              ' Current dialog state
Dim LR_savest   As Integer              ' Saved dialog state
Dim LR_index    As Integer              ' Index into vector table
Dim LR_vecptr   As Integer              ' Index into module vector
Dim LR_modnbr   As Integer              ' Number of module to execute
Dim LR_mesg     As String               ' For pop-up error messages

Dim LR_nextst   As String               ' Next state for each event
Dim LR_action   As String               ' Action for each event
Dim LR_module   As String               ' Module list for action
Dim LR_offset(1 To 10) As Integer


'-- Dialog interpreter starts here ------------------------------------------

Static Function vbcalc_EXECUTE () As Integer
    LR_state = 0                        ' First state is always 0
    LR_initialise                       ' Initialse static strings

    ' Call Initialise_the_program through the Dispatcher routine
    ZzDis_vbcalc -1, LR_nextev, LR_excpev, LR_raised
    Do Until LR_nextev = terminate_event
        LR_event = LR_nextev
        If LR_event >= 9 Or LR_event < 0 Then
            LR_mesg = "State" & LR_state & " - event" & LR_event
            LR_mesg = LR_mesg & " is out of range"
            LR_fatalerror
            Exit Do
        End If
        LR_index = (LR_state * 9 + LR_event) * 2 + 1
        LR_index = Mid(LR_action, LR_index, 2)
        LR_savest = LR_state

        '   If no action for this event, try the defaults state
        If LR_index = 0 Then
            LR_state = LR_defaults_state
            LR_index = (LR_state * 9 + LR_event) * 2 + 1
            LR_index = Mid(LR_action, LR_index, 2)
            If LR_index = 0 Then
                LR_mesg = "State" & LR_state & " - event"
                LR_mesg = LR_mesg & LR_event & " is not accepted"
                LR_fatalerror
                Exit Do
            End If
        End If

        LR_nextev = LR_NULL_EVENT
        LR_excpev = LR_NULL_EVENT
        LR_raised = False

        '   Execute module list for state transition, 0 indicates end of list
        LR_vecptr = LR_offset(LR_index)
        Do
            LR_modnbr = Mid(LR_module, LR_vecptr * 2 + 1, 2)
            If LR_modnbr = 0 Or LR_raised Then Exit Do
            ' Execute the module via the Dispatcher
            ZzDis_vbcalc LR_modnbr, LR_nextev, LR_excpev, LR_raised
            LR_vecptr = LR_vecptr + 1
        Loop

        '   Handle exception if any was raised
        If LR_raised Then
            If LR_excpev <> LR_NULL_EVENT Then LR_event = LR_excpev
            LR_nextev = LR_event
        Else
            LR_index = (LR_state * 9 + LR_event) * 1 + 1
            LR_state = Mid(LR_nextst, LR_index, 1)
        End If
        If LR_state = LR_defaults_state Then LR_state = LR_savest
        If LR_nextev = LR_NULL_EVENT Then
            ' get_external_event
            ZzDis_vbcalc -2, LR_nextev, LR_excpev, LR_raised
            If LR_nextev = LR_NULL_EVENT Then
                LR_mesg = "No event set after event" & LR_event
                LR_mesg = LR_mesg & " in state" & LR_state
                LR_fatalerror
                Exit Do
            End If
        End If
    Loop
    vbcalc_EXECUTE = LR_feedback
End Function

'   Standard subroutines used by dialog interpreter

Private Sub LR_fatalerror
    LR_mesg = LR_mesg & Chr$(10) & "Source = vbcalc"
    Debug.Print LR_mesg
    MsgBox LR_mesg, MB_OK + MB_ICONSTOP, "Libero Fatal Error"
    LR_feedback = -1                    ' Signal error to main function
End Sub

Private Sub LR_initialise
    static values_loaded As Integer     ' First-time flag

    If values_loaded Then Exit Sub      ' If we already initialised tables
    values_loaded = True                '   then things are okay, so leave

    LR_nextst = ""
    LR_nextst = LR_nextst & "000000100"
    LR_nextst = LR_nextst & "100023001"
    LR_nextst = LR_nextst & "000023002"
    LR_nextst = LR_nextst & "300200032"
    LR_nextst = LR_nextst & "404444044"

    LR_action = ""
    LR_action = LR_action & "000200000000010000"
    LR_action = LR_action & "020000000504000003"
    LR_action = LR_action & "000000000504000003"
    LR_action = LR_action & "070000060000000806"
    LR_action = LR_action & "100002090909000909"

    LR_module = ""
    LR_module = LR_module + "02" + "00"
    LR_module = LR_module + "07" + "00"
    LR_module = LR_module + "010307" + "00"
    LR_module = LR_module + "0502" + "00"
    LR_module = LR_module + "0602" + "00"
    LR_module = LR_module + "090602" + "00"
    LR_module = LR_module + "081007" + "00"
    LR_module = LR_module + "081102" + "00"
    LR_module = LR_module + "0307" + "00"
    LR_module = LR_module + "0407" + "00"

    LR_offset(1) = 0
    LR_offset(2) = 2
    LR_offset(3) = 4
    LR_offset(4) = 8
    LR_offset(5) = 11
    LR_offset(6) = 14
    LR_offset(7) = 18
    LR_offset(8) = 22
    LR_offset(9) = 26
    LR_offset(10) = 29
End Sub

