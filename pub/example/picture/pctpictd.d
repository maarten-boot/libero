/*---------------------------------------------------------------------------*
 *  pctpictd.d - LIBERO dialog data definitions for pctpict.c.               *
 *  Generated by LIBERO 2.10 on  7 Dec, 1995, 15:08.                         *
 *  Schema file used: lrschema.c.                                            *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
#define Terminate_event                 -1
#define Comma_character_event           0
#define Dollar_character_event          1
#define Edit_character_event            2
#define Error_event                     3
#define Finished_event                  4
#define Many_event                      5
#define Nine_numeric_event              6
#define Ok_event                        7
#define One_event                       8
#define Open_parenthesis_event          9
#define Point_character_event           10
#define S_virtual_sign_event            11
#define Sign_character_event            12
#define Star_zero_suppress_event        13
#define Unknown_char_event              14
#define V_virtual_point_event           15
#define X_character_event               16
#define Z_zero_suppress_event           17
#define _LR_STATE_After_init            0
#define _LR_STATE_Have_first_char       1
#define _LR_STATE_In_character          2
#define _LR_STATE_In_prov_numeric       3
#define _LR_STATE_In_pure_numeric       4
#define _LR_STATE_In_alphanumeric       5
#define _LR_STATE_In_edited             6
#define _LR_STATE_Z_edited              7
#define _LR_STATE_Star_edited           8
#define _LR_STATE_Have_sign             9
#define _LR_STATE_After_sign            10
#define _LR_STATE_Have_dollar           11
#define _LR_STATE_After_dollar          12
#define _LR_STATE_Defaults              13
#define _LR_defaults_state              13

/*- Variables used by dialog interpreter ------------------------------------*/

typedef int t_event;                    /*  Type for dialog entity           */
static t_event
    _LR_event,                          /*  Event for state transition       */
    _LR_state,                          /*  Current dialog state             */
    _LR_savest,                         /*  Saved dialog state               */
    _LR_index,                          /*  Index into vector table          */
    The_next_event,                     /*  Next event from module           */
    The_exception_event;                /*  Exception event from module      */

static word
   *_LR_vecptr;                         /*  Pointer into vector table        */

static Bool
    Exception_raised;                   /*  TRUE if exception raised         */

/*- Function prototypes -----------------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

local  Raise_exception                  (t_event event);
MODULE Initialise_the_program           (void);
MODULE Get_external_event               (void);
MODULE Allow_one_sign_only_at_end       (void);
MODULE Check_if_one_or_many             (void);
MODULE Check_suppress_ends_at_point     (void);
MODULE Collect_repetition_or_run        (void);
MODULE Count_picture_component          (void);
MODULE Get_next_picture_char            (void);
MODULE Have_decimal_point               (void);
MODULE Have_floating_insert             (void);
MODULE Have_sign_character              (void);
MODULE Have_virtual_sign                (void);
MODULE Return_error_feedback            (void);
MODULE Set_alphanumeric_picture         (void);
MODULE Set_character_picture            (void);
MODULE Set_edited_picture               (void);
MODULE Set_numeric_picture              (void);
MODULE Signal_empty_picture             (void);
MODULE Signal_invalid_picture_char      (void);
MODULE Signal_invalid_repetition        (void);
MODULE Terminate_the_program            (void);

/*- Static areas ------------------------------------------------------------*/

static word _LR_nextst [][18] =
{
    { 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0 },
    { 6,11,6,0,1,0,3,0,0,0,6,4,9,8,0,4,2,7 },
    { 0,0,0,0,2,0,5,0,0,0,0,0,0,0,0,0,2,0 },
    { 6,0,6,0,3,0,3,0,0,0,6,0,6,0,0,4,5,0 },
    { 0,0,0,0,4,0,4,0,0,0,0,0,0,0,0,4,0,0 },
    { 0,0,0,0,5,0,5,0,0,0,0,0,0,0,0,0,5,0 },
    { 6,0,6,0,6,0,6,0,0,0,6,0,6,0,0,0,0,0 },
    { 7,0,6,0,7,0,6,0,0,0,7,0,0,0,0,0,0,7 },
    { 8,0,6,0,8,0,6,0,0,0,8,0,0,8,0,0,0,0 },
    { 0,0,0,0,0,6,0,0,10,0,0,0,0,0,0,0,0,0 },
    { 6,11,6,0,10,0,6,0,0,0,6,0,0,8,0,0,0,7 },
    { 0,0,0,0,0,6,0,0,12,0,0,0,0,0,0,0,0,0 },
    { 6,0,6,0,12,0,6,0,0,0,6,0,0,8,0,0,0,7 },
    { 13,13,13,13,0,0,13,0,0,13,13,13,13,13,13,13,13,13 }
};

static word _LR_action [][18] =
{
    { 0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0 },
    { 3,8,3,0,9,0,3,0,0,0,6,4,7,3,0,5,3,3 },
    { 0,0,0,0,10,0,3,0,0,0,0,0,0,0,0,0,3,0 },
    { 3,0,3,0,12,0,3,0,0,0,6,0,11,0,0,5,3,0 },
    { 0,0,0,0,12,0,3,0,0,0,0,0,0,0,0,5,0,0 },
    { 0,0,0,0,13,0,3,0,0,0,0,0,0,0,0,0,3,0 },
    { 3,0,3,0,14,0,3,0,0,0,6,0,11,0,0,0,0,0 },
    { 3,0,3,0,14,0,15,0,0,0,6,0,0,0,0,0,0,3 },
    { 3,0,3,0,14,0,15,0,0,0,6,0,0,3,0,0,0,0 },
    { 0,0,0,0,0,16,0,0,1,0,0,0,0,0,0,0,0,0 },
    { 3,8,3,0,9,0,3,0,0,0,6,0,0,3,0,0,0,3 },
    { 0,0,0,0,0,16,0,0,1,0,0,0,0,0,0,0,0,0 },
    { 3,0,3,0,9,0,3,0,0,0,6,0,0,3,0,0,0,3 },
    { 17,17,17,19,0,0,17,0,0,18,17,17,17,17,17,17,17,17 }
};

static word _LR_vector [][5+1] =
{
    {0},
    {5,_LR_STOP},
    {18,_LR_STOP},
    {3,4,5,_LR_STOP},
    {9,5,_LR_STOP},
    {6,5,_LR_STOP},
    {4,6,5,_LR_STOP},
    {3,4,8,1,_LR_STOP},
    {3,4,1,_LR_STOP},
    {15,_LR_STOP},
    {12,18,_LR_STOP},
    {3,4,0,8,5,_LR_STOP},
    {14,18,_LR_STOP},
    {11,18,_LR_STOP},
    {13,18,_LR_STOP},
    {2,3,4,5,_LR_STOP},
    {7,5,_LR_STOP},
    {16,_LR_STOP},
    {17,_LR_STOP},
    {10,18,_LR_STOP}
};

static function _LR_module [] =
{
    Allow_one_sign_only_at_end,
    Check_if_one_or_many,
    Check_suppress_ends_at_point,
    Collect_repetition_or_run,
    Count_picture_component,
    Get_next_picture_char,
    Have_decimal_point,
    Have_floating_insert,
    Have_sign_character,
    Have_virtual_sign,
    Return_error_feedback,
    Set_alphanumeric_picture,
    Set_character_picture,
    Set_edited_picture,
    Set_numeric_picture,
    Signal_empty_picture,
    Signal_invalid_picture_char,
    Signal_invalid_repetition,
    Terminate_the_program
};

